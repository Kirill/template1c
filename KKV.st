{1,
{13,
{"KKV",1,0,"",""},
{4,
{"Стандартные средства 1С",1,0,"",""},
{0,
{"Процедура (Экспорт)",0,0,"Проц","Процедура <?""Имя процедуры"">() Экспорт
	<?>
КонецПроцедуры //<?""Имя процедуры"">"}
},
{0,
{"Функция (Экспорт)",0,0,"","Функция <?""Имя функции"">() Экспорт
	
	Возврат <?>;
КонецФункции //<?""Имя функции"">"}
},
{0,
{"Макет",0,0,"Макет=","Макет = ПолучитьМакет(""<?""Название макета"">"");"}
},
{0,
{"Макет (общий)",0,0,"Макет=","Макет = ПолучитьОбщийМакет(""<?""Название макета"">"");"}
}
},
{3,
{"Комментарии",1,0,"",""},
{0,
{"Комментарий в тексте",0,0,"/","// <?"""", ИмяПользователя> задание № <?> <?"""", ДатаВремя, ""ДФ=yyyy-MM-dd""> {

// }"}
},
{0,
{"Комментарий в запросе",0,0,"/","| // <?"""", ИмяПользователя> задание № <?> <?"""", ДатаВремя, ""ДФ=yyyy-MM-dd""> {
|
| // }"}
},
{0,
{"Комментарий текста",0,0,".","
// <?>"}
}
},
{4,
{"Обработчики Формы",1,0,"",""},
{0,
{"вмПередОткрытием",0,0,"вмПО","вмПередОткрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);"}
},
{0,
{"вмПриОткрытии",0,0,"вмПО","вмПриОткрытии(ЭтаФорма);"}
},
{0,
{"вмПередЗакрытием",0,0,"вмПЗ","вмПередЗакрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);"}
},
{0,
{"вмПриЗакрытии",0,0,"вмПЗ","вмПриЗакрытии(ЭтаФорма);"}
}
},
{1,
{"Ошибки ввода",1,0,"",""},
{0,
{"ЭЭ -> """"",0,0,"ЭЭ","""<?>"""}
}
},
{1,
{"Шаблон внешних документов",1,0,"",""},
{0,
{"Внешняя печатная форма",0,0,"Печать","Перем Права Экспорт;
Функция Печать(ДокОбъект, ТабДокумент) Экспорт
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
	Макет = ПолучитьМакет(""<?>"");
		
	
	ТабДокумент.АвтоМасштаб=Истина;
	
	Возврат ТабДокумент;
КонецФункции // Печать()

Права = Неопределено;
#Если Клиент Тогда
	Права = глПрава;
#КонецЕсли"}
}
},
{0,
{"ВерсияОбработки",0,1,"Версия","// <?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДФ='dd.MM.yyyy hh:mm:ss'"">

Перем пИмяОбработки Экспорт;
Перем пВерсияОбработки Экспорт;
Перем HackAttempt;

// Событие перед открытием формы
//
// Параметры
//	Форма  - Форма - инициатор события
//  Отказ  - Булево - позволяет запретить открытие обработки
//  СтандартнаяОбработка  - Булево - использовать стандартную обработку открытия или свою
//
Процедура вмПередОткрытием(Форма, Отказ, СтандартнаяОбработка) Экспорт
	HackAttempt = 1;
КонецПроцедуры //вмПередОткрытием

// Событие при открытии формы
//
// Параметры
//	Форма  - Форма - форма, которая должна быть открыта
Процедура вмПриОткрытии(Форма) Экспорт	
	Форма.Заголовок = СформироватьЗаголовок();
КонецПроцедуры //вмПриОткрытии

// Событие при закрытии формы
//
// Параметры
//  Форма - которая должна быть закрыта
Процедура вмПриЗакрытии(Форма) Экспорт	
	
КонецПроцедуры //вмПриЗакрытии

// Событие перед закрытием формы
//
// Параметры
//  Форма - Форма - инициатор события
//  Отказ  - Булево - позволяет запретить открытие обработки
//  СтандартнаяОбработка  - Булево - использовать стандартную обработку открытия или свою
//
Процедура вмПередЗакрытием(Форма, Отказ, СтандартнаяОбработка) Экспорт	
	
КонецПроцедуры //вмПередЗакрытием

// Событие при нажатии кнопки
//
// Параметры
//  Форма	- Форма	 - владелец кнопки
//  Кнопка  - Кнопка - нажатая кнопка
//
Процедура вмНажатиеКнопки(Форма, Кнопка) Экспорт	
	
КонецПроцедуры //вмНажатиеКнопки

Функция ИмяОбработки() Экспорт
	Если НЕ ЗначениеЗаполнено(пИмяОбработки) Тогда
		Попытка 
			пИмяОбработки = ЭтотОбъект.Метаданные().Синоним;
		Исключение
			пИмяОбработки = ""Без имени"";
		КонецПопытки;
	КонецЕсли;
	Возврат пИмяОбработки;
КонецФункции

Функция ВерсияОбработки() Экспорт
	Попытка
		Возврат ЭтотОбъект.Метаданные().Комментарий;
	Исключение
		Возврат """";
	КонецПопытки;
КонецФункции

Функция СформироватьЗаголовок() Экспорт
	Возврат ИмяОбработки() + ?(ВерсияОбработки() = """", ""."", "". "" + ВерсияОбработки());
КонецФункции

пИмяОбработки = ""<?""Имя обработки"">"";
HackAttempt = 0;"}
},
{0,
{"ПометкаСписка",0,1,"Пометка","//Режим : 1 - Пометить все, 2 - снять пометку, 3 - инвертировать пометку
Процедура ПометкаСписка(Режим, СписокЗначений) Экспорт
	Для Каждого ЭлементСпискаЗначений Из СписокЗначений Цикл
		ЭлементСпискаЗначений.Пометка = ?(Режим = 1, Истина, ?(Режим = 2, Ложь, НЕ ЭлементСпискаЗначений.Пометка));
	КонецЦикла;
КонецПроцедуры"}
},
{0,
{"Прогресс",0,1,"прогресс","фрмПрогресс = ПолучитьОбщуюФорму(""Индикация"");
фрмПрогресс.СтрокаСостояния = ""<?>"";
	
фрмПрогресс.ЭлементыФормы.Индикатор.МаксимальноеЗначение=<?""Выборка"">.Количество();
фрмПрогресс.ЭлементыФормы.Индикатор.Шаг=<?""Количество данных"">/100;
фрмПрогресс.Открыть();

Инд = 0;
Пока <?""Выборка"">.Следующий() Цикл
	ОбработкаПрерыванияПользователя();
	Инд=Инд+1;
	фрмПрогресс.СтрокаСостояния = """" + Формат(Инд,""ЧГ=0"") + "" / "" + Формат(<?""Количество данных"">, ""ЧГ=0"");
	фрмПрогресс.ЭлементыФормы.Индикатор.Значение=Инд;
	
КонецЦикла;
фрмПрогресс.Закрыть();"}
},
{0,
{"Заполнить",0,0,"Заполнить","
Процедура Заполнить(ФормаОбъекта,ТаблицаТовары,КнопкаПанели) Экспорт
	#Если Клиент Тогда
		ДокументОбъект	= ФормаОбъекта.ДокументОбъект;
        <?>
	#КонецЕсли
//вне этой конструкции НИЧЕГО НЕ ДЕЛАЕМ
КонецПроцедуры //Заполнить"}
},
{0,
{"РежимЗаписиДокументов",0,0,"РЗД","РежимЗаписиДокумента."}
},
{0,
{"Определение прав",0,0,"Права=","Перем Права Экспорт;

Права = Неопределено;
#Если Клиент Тогда
	Права = глПрава;
#КонецЕсли"}
},
{0,
{"ВосстановитьЗначение (вз)",0,0,"вз","ВосстановитьЗначение(""<?>"");"}
},
{0,
{"СохранитьЗначение (сз)",0,0,"сз","СохранитьЗначение(""<?>"",);"}
}
}
}