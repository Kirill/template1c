{1,
{18,
{"KKV (Версия 0.0.1)",1,0,"",""},
{1,
{"Запросы",1,0,"",""},
{0,
{"Запрос с конструктором",0,1,"З[апрос=]","Запрос = Новый Запрос;
ТекстЗапроса = ""<?"""", ТекстЗапроса>"";
Запрос.УстановитьПараметр("""", <?>);

Запрос.Текст = ТекстЗапроса;
РезультатЗапроса = Запрос.Выполнить();
"}
}
},
{2,
{"Коллекция значений",1,0,"",""},
{0,
{"Структура",0,0,"Стр","Новый Структура(""<?>"");"}
},
{0,
{"СписокЗначение",0,0,"сз","Новый СписокЗначение;"}
}
},
{7,
{"Комментарии",1,0,"",""},
{0,
{"Изменение (комментарий)",0,0,".из[менение]","// { <?"""", ПолноеИмяПользователя> [<?"""", ДатаВремя, ""ДЛФ=DT"">]
<?>
// } <?"""", ПолноеИмяПользователя> [<?"""", ДатаВремя, ""ДЛФ=DT"">]"}
},
{0,
{"Комментарий в две строки",0,0,"/*","// <?>
//"}
},
{0,
{"Комментарий в запросе",0,0,"/","| // <?"""", ИмяПользователя> задание № <?> <?"""", ДатаВремя, ""ДФ=yyyy-MM-dd""> {
|
| // }"}
},
{0,
{"Комментарий в тексте",0,0,"/","// <?"""", ИмяПользователя> задание № <?> <?"""", ДатаВремя, ""ДФ=yyyy-MM-dd""> {

// }"}
},
{0,
{"Комментарий текста",0,0,".","
// <?>"}
},
{0,
{"Отчерк",0,0,"/-","//__________________________________________________________________________________________________________________________
<?>"}
},
{3,
{"TODO",1,0,"",""},
{0,
{"Памятка",0,0,"TODO","//__TODO__ <?>"}
},
{0,
{"Удаление",0,0,"TODO","//__TODO__ УДАЛЕНИЕ
<?>"}
},
{0,
{"Новый функционал",0,0,"TODO","//__TODO__ НОВЫЙ_ФУНКЦИОНАЛ"}
}
}
},
{3,
{"Константы",1,0,"",""},
{0,
{"Истина",0,0,"И[стина]","Истина"}
},
{0,
{"Ложь",0,0,"Л[ожь]","Ложь"}
},
{0,
{"Неопределено",0,0,"Н","Неопределено"}
}
},
{4,
{"Обработчики Формы",1,0,"",""},
{0,
{"вмПередОткрытием",0,0,"вмПО","вмПередОткрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);"}
},
{0,
{"вмПриОткрытии",0,0,"вмПО","вмПриОткрытии(ЭтаФорма);"}
},
{0,
{"вмПередЗакрытием",0,0,"вмПЗ","вмПередЗакрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);"}
},
{0,
{"вмПриЗакрытии",0,0,"вмПЗ","вмПриЗакрытии(ЭтаФорма);"}
}
},
{1,
{"Ошибки ввода",1,0,"",""},
{0,
{"ЭЭ -> """"",0,0,"ЭЭ","""<?>"""}
}
},
{23,
{"Сокращения",1,0,"",""},
{3,
{"Символы",1,0,"",""},
{0,
{"Перевод строки",0,0,"ПС","+ Символы.ПС<?>"}
},
{0,
{"Перевод строки с плюсом",0,0,"ПС[+]","+ Символы.ПС + <?>"}
},
{0,
{"Табулятор",0,0,"таб","Символы.Таб<?>"}
}
},
{4,
{"Объекты Метаданных",1,0,"",""},
{0,
{"Документы",0,0,"Д[окументы]","Документы.<?"""", Документ>"}
},
{0,
{"Отчеты",0,0,"О[тчеты]","Отчеты.<?"""", Отчеты>"}
},
{0,
{"РегистрыСведений",0,0,"рс","РегистрыСведений.<?"""", РегистрСведений>"}
},
{0,
{"Справочники",0,0,"С[правочники]","Справочники.<?"""", Справочник>"}
}
},
{0,
{"НачалоМесяца",0,0,"НМ","НачалоМесяца(<?>)"}
},
{0,
{"КонецМесяца",0,0,"КМ","КонецМесяца(<?>)"}
},
{0,
{"НачалоДня",0,0,"НД","НачалоДня(<?>)"}
},
{0,
{"КонецДня",0,0,"КД","КонецДня(<?>)"}
},
{0,
{"ТекущаяДата",0,0,"ТД","ТекущаяДата()"}
},
{0,
{"ПериодДействияНачало",0,0,"ПДН","ПериодДействияНачало"}
},
{0,
{"ПериодДействияКонец",0,0,"ПДК","ПериодДействияКонец"}
},
{0,
{"БазовыйПериодНачало",0,0,"БПН","БазовыйПериодНачало"}
},
{0,
{"БазовыйПериодКонец",0,0,"БПК","БазовыйПериодКонец"}
},
{0,
{"ПланыВидовХарактеристик",0,0,"ПВХ","ПланыВидовХарактеристик"}
},
{0,
{"ЗначениеЗаполнено",0,0,"ЗЗ","ЗначениеЗаполнено(<?>)"}
},
{0,
{"Не ЗначениеЗаполнено",0,0,"НЗЗ","Не ЗначениеЗаполнено(<?>)"}
},
{0,
{"ЗаполнитьЗначенияСвойств",0,0,"ЗЗС","ЗаполнитьЗначенияСвойств(<?>)"}
},
{0,
{"СокрЛП",0,0,"СЛ[П]","СокрЛП(<?>)"}
},
{0,
{"СтрЗаменить",0,0,"СтрЗ[аменить]","СтрЗаменить(<?>,,)"}
},
{0,
{"Обработка прерывания пользователя ",0,0,"ОПП","ОбработкаПрерыванияПользователя();
<?>"}
},
{0,
{"Очистить сообщения",0,0,"ОС","ОчиститьСообщения();
<?>"}
},
{0,
{"Сохранить значение ",0,0,"Сох[ранитьЗначение]","СохранитьЗначение(<?>);"}
},
{0,
{"Восстановить значение ",0,0,"Вос[становитьЗначение]","ВосстановитьЗначение(<?>);"}
},
{0,
{"ОбработкаПрерыванияПользователя();",0,0,"опп","ОбработкаПрерыванияПользователя();<?>"}
},
{0,
{"ОписаниеОшибки",0,0,"оо","ОписаниеОшибки = ОписаниеОшибки();
<?>"}
}
},
{2,
{"Стандартные средства 1С",1,0,"",""},
{0,
{"Макет",0,0,"Макет=","Макет = ПолучитьМакет(""<?""Название макета"">"");"}
},
{0,
{"Макет (общий)",0,0,"Макет=","Макет = ПолучитьОбщийМакет(""<?""Название макета"">"");"}
}
},
{20,
{"Управляющие",1,0,"",""},
{0,
{"?(,,)",0,0,"?(","?(,,)"}
},
{0,
{"?(,,)",0,0,",(","?(,,)"}
},
{0,
{"Если",0,0,"Е[сли]","Если <?> Тогда
	
КонецЕсли;"}
},
{0,
{"ЕслиИначе",0,0,"Е[сли]","Если <?> Тогда

Иначе
	
КонецЕсли;"}
},
{0,
{"ИначеЕсли",0,0,"ИначеЕ[сли]","ИначеЕсли <?> Тогда"}
},
{0,
{"ИначеЕсли",0,0,"ИЕ","ИначеЕсли <?> Тогда"}
},
{0,
{"КонецЕсли",0,0,"КЕ","<?>КонецЕсли;"}
},
{0,
{"Вызвать исключение",0,0,"Выз[ватьИсключение]","ВызватьИсключение ""<?>"";"}
},
{0,
{"Перем",0,0,"Пер[ем]","Перем <?""Введите имя переменной""><?"""", ВыборВарианта, ""Не экспортируемая"", "";"", ""Экспортируемая"","" Экспорт;"">"}
},
{0,
{"Попытка",0,0,"П[опытка]","Попытка
	<?>
Исключение
    //Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
КонецПопытки;"}
},
{0,
{"Процедура",0,0,"П[роцедура]","Процедура <?>()<?"""", ВыборВарианта, ""Экспортируемая"", "" Экспорт"", ""Не экспортируемая"", """">
	
КонецПроцедуры
"}
},
{0,
{"Функция",0,0,"Ф[ункция]","Функция <?>()<?"""", ВыборВарианта, ""Экспортируемая"", "" Экспорт"", ""Не экспортируемая"", """">
	Результат = Неопределено;
	Возврат Результат;
КонецФункции
"}
},
{0,
{"Для",0,0,"Дл[я]","Для <?> По  Цикл
	
КонецЦикла;"}
},
{0,
{"Для Каждого из Цикл",0,0,"Дл[я Каждого]","Для Каждого <?> Из Цикл
	
	//ОбработкаПрерыванияПользователя();
КонецЦикла; //Для Каждого Из"}
},
{0,
{"Пока",0,0,"Пок[а]","Пока <?> Цикл
	
КонецЦикла;"}
},
{0,
{"Цикл КонецЦикла",0,0,"Ц[икл]","Цикл 
<?>;
КонецЦикла;"}
},
{0,
{"КонецЦикла;",0,0,"КЦ","	<?>
КонецЦикла;"}
},
{0,
{"цс    Цикл для Счетчика",0,0,"цс","<?""Имя Счетчика?""> = 0;
Пока <?""Имя Счетчика?""> < <?""Имя переменной числа итераций?""> Цикл
	<?""Имя Счетчика?""> = <?""Имя Счетчика?""> + 1;
	<?>
КонецЦикла;   //по <?""Имя Счетчика?""> < <?""Имя переменной числа итераций?"">"}
},
{0,
{"=+		Сч=Сч+1",0,0,"=+","<?""Имя переменной счетчика?""> = <?""Имя переменной счетчика?""> + 1<?>;"}
},
{0,
{"+=		Сч=Сч+1;",0,0,"+=","<?""Имя переменной счетчика?""> = <?""Имя переменной счетчика?""> + 1<?>;"}
}
},
{2,
{"Шаблон внешних документов",1,0,"",""},
{0,
{"Внешняя печатная форма",0,0,"Печать","Перем Права Экспорт;
Функция Печать(ДокОбъект, ТабДокумент) Экспорт
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
	Макет = ПолучитьМакет(""<?>"");
		
	
	ТабДокумент.АвтоМасштаб=Истина;
	
	Возврат ТабДокумент;
КонецФункции // Печать()

Права = Неопределено;
#Если Клиент Тогда
	Права = глПрава;
#КонецЕсли"}
},
{0,
{"Шаблон формы обрабтки",0,0,"","
Процедура КнопкаВыполнитьНажатие(Кнопка)
	вмНажатиеКнопки(ЭтаФорма, Кнопка);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	вмПередОткрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);
КонецПроцедуры

Процедура ПриОткрытии()
	вмПриОткрытии(ЭтаФорма);
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	вмПередЗакрытием(ЭтаФорма, Отказ, СтандартнаяОбработка);
КонецПроцедуры

Процедура ПриЗакрытии()
	вмПриЗакрытии(ЭтаФорма);
КонецПроцедуры
"}
}
},
{0,
{"ВерсияОбработки",0,1,"Версия","// <?"""", ПолноеИмяПользователя> <?"""", ДатаВремя, ""ДФ='dd.MM.yyyy HH:mm:ss'"">

Перем пИмяОбработки Экспорт;
Перем пВерсияОбработки Экспорт;
Перем HackAttempt;

// Событие перед открытием формы
//
// Параметры
//	Форма  - Форма - инициатор события
//  Отказ  - Булево - позволяет запретить открытие обработки
//  СтандартнаяОбработка  - Булево - использовать стандартную обработку открытия или свою
//
Процедура вмПередОткрытием(Форма, Отказ, СтандартнаяОбработка) Экспорт
	HackAttempt = 1;
КонецПроцедуры //вмПередОткрытием

// Событие при открытии формы
//
// Параметры
//	Форма  - Форма - форма, которая должна быть открыта
Процедура вмПриОткрытии(Форма) Экспорт	
	Форма.Заголовок = СформироватьЗаголовок();
КонецПроцедуры //вмПриОткрытии

// Событие при закрытии формы
//
// Параметры
//  Форма - которая должна быть закрыта
Процедура вмПриЗакрытии(Форма) Экспорт	
	
КонецПроцедуры //вмПриЗакрытии

// Событие перед закрытием формы
//
// Параметры
//  Форма - Форма - инициатор события
//  Отказ  - Булево - позволяет запретить открытие обработки
//  СтандартнаяОбработка  - Булево - использовать стандартную обработку открытия или свою
//
Процедура вмПередЗакрытием(Форма, Отказ, СтандартнаяОбработка) Экспорт	
	
КонецПроцедуры //вмПередЗакрытием

// Событие при нажатии кнопки
//
// Параметры
//  Форма	- Форма	 - владелец кнопки
//  Кнопка  - Кнопка - нажатая кнопка
//
Процедура вмНажатиеКнопки(Форма, Кнопка) Экспорт	
	
КонецПроцедуры //вмНажатиеКнопки

// Событие при выводе строки
//
// Параметры
//  Форма	- Форма	 - владелец кнопки
//  Элемент - Табличная часть - табличная часть
//  ОформлениеСтроки - 
//  ДанныеСтроки - Данные строки
//
Процедура вмПриВыводеСтроки(Форма, Элемент, ОформлениеСтроки, ДанныеСтроки) Экспорт
		
КонецПроцедуры

// Событие при начале выбора
//
// Параметры
//  Форма	- Форма	 - владелец элемента выбора
//  Элемент - Элемент выбора
//  Стандартная обработка - Булево - Стандартная обработка выбора или нет
Процедура вмНачалоВыбора(Форма, Элемент, СтандартнаяОбработка) Экспорт
		
КонецПроцедуры


Функция ИмяОбработки() Экспорт
	Попытка 
		пИмяОбработки = ЭтотОбъект.Метаданные().Синоним;
	Исключение
		пИмяОбработки = ""Без имени"";
	КонецПопытки;
	Возврат пИмяОбработки;
КонецФункции

Функция ВерсияОбработки() Экспорт
	Попытка
		Возврат ЭтотОбъект.Метаданные().Комментарий;
	Исключение
		Возврат """";
	КонецПопытки;
КонецФункции

Функция СформироватьЗаголовок() Экспорт
	Возврат ИмяОбработки() + ?(ВерсияОбработки() = """", ""."", "". "" + ВерсияОбработки());
КонецФункции

HackAttempt = 0;"}
},
{0,
{"ПометкаСписка",0,1,"Пометка","//Режим : 1 - Пометить все, 2 - снять пометку, 3 - инвертировать пометку
Процедура ПометкаСписка(Режим, СписокЗначений) Экспорт
	Для Каждого ЭлементСпискаЗначений Из СписокЗначений Цикл
		ЭлементСпискаЗначений.Пометка = ?(Режим = 1, Истина, ?(Режим = 2, Ложь, НЕ ЭлементСпискаЗначений.Пометка));
	КонецЦикла;
КонецПроцедуры"}
},
{0,
{"Прогресс",0,1,"прогресс","фрмПрогресс = ПолучитьОбщуюФорму(""Индикация"");
фрмПрогресс.СтрокаСостояния = ""<?>"";
	
фрмПрогресс.ЭлементыФормы.Индикатор.МаксимальноеЗначение=<?""Выборка"">.Количество();
фрмПрогресс.ЭлементыФормы.Индикатор.Шаг=<?""Количество данных"">/100;
фрмПрогресс.Открыть();

Инд = 0;
Пока <?""Выборка"">.Следующий() Цикл
	ОбработкаПрерыванияПользователя();
	Инд=Инд+1;
	фрмПрогресс.СтрокаСостояния = """" + Формат(Инд,""ЧГ=0"") + "" / "" + Формат(<?""Количество данных"">, ""ЧГ=0"");
	фрмПрогресс.ЭлементыФормы.Индикатор.Значение=Инд;
	
КонецЦикла;
фрмПрогресс.Закрыть();"}
},
{0,
{"Заполнить",0,0,"Заполнить","
Процедура Заполнить(ФормаОбъекта,ТаблицаТовары,КнопкаПанели) Экспорт
	#Если Клиент Тогда
		ДокументОбъект	= ФормаОбъекта.ДокументОбъект;
        <?>
	#КонецЕсли
//вне этой конструкции НИЧЕГО НЕ ДЕЛАЕМ
КонецПроцедуры //Заполнить"}
},
{0,
{"РежимЗаписиДокументов",0,0,"РЗД","РежимЗаписиДокумента."}
},
{0,
{"Определение прав",0,0,"Права=","Перем Права Экспорт;

Права = Неопределено;
#Если Клиент Тогда
	Права = глПрава;
#КонецЕсли"}
},
{0,
{"ВосстановитьЗначение (вз)",0,0,"вз","ВосстановитьЗначение(""<?>"");"}
},
{0,
{"СохранитьЗначение (сз)",0,0,"сз","СохранитьЗначение(""<?>"",);"}
}
}
}