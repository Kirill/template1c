{1,
{4,
{"Все (собрал и правил SZA)",1,0,"",""},
{9,
{"Управляющие",1,0,"",""},
{0,
{"Если",0,0,"Если","Если <?""Условие""> Тогда   
	<?>                   
КонецЕсли; //<?""Условие"">"}
},
{0,
{"ЕслиИначе",0,0,"Если","Если <?""Условие""> Тогда
	<?>                
Иначе                  
	                   
КонецЕсли;  //<?""Условие""> "}
},
{0,
{"Пока",0,0,"Пока","Пока <?""Условие""> Цикл 
	<?>                
КонецЦикла; //<?""Условие""> "}
},
{0,
{"Для",0,0,"Для","Для <?""Счетчик""> По <?""Ограничение""> Цикл 
	<?>
КонецЦикла; //Для <?""Счетчик""> По <?""Ограничение"">"}
},
{0,
{"Для каждого",0,0,"Для[ Каждого]","Для каждого <?""Переменная""> Из <?""Коллекция""> Цикл    
	<?>                                               
КонецЦикла; //Для каждого <?""Переменная""> Из <?""Коллекция""> "}
},
{0,
{"Процедура",0,0,"Проц[едура]","Процедура <?""Имя процедуры"">(<?>)  
	
КонецПроцедуры //<?""Имя процедуры"">
"}
},
{0,
{"Процедура (с заголовком)",0,0,"Проц[едура]","// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура <?""Имя процедуры"">(<?>) 
	
КонецПроцедуры // <?""Имя процедуры"">()
"}
},
{0,
{"Функция (с заголовком)",0,0,"Функ[ция]","// <Описание функции>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция <?""Имя функции"">(<?>)
    
КонецФункции // <?""Имя функции"">()
"}
},
{0,
{"Возврат",0,0,"","Возврат;<?>"}
}
},
{11,
{"Прикладные",1,0,"",""},
{0,
{"Значение перечисления",0,0,"Переч[исления]","Перечисления.<?"""", ЗначениеПеречисления>"}
},
{3,
{"Константы",1,0,"",""},
{0,
{"Получить/установить",0,0,"Конст[анты]","Константы.<?"""", Константа>.<?""Выбор метода"", ВыборВарианта, ""Получить"", ""Получить"", ""Установить"", ""Установить"">()"}
},
{0,
{"Установить",0,0,"","Константы.<?"""", Константа>.Установить(<?>);"}
},
{0,
{"Получить",0,0,"","Константы.<?"""", Константа>.Получить()"}
}
},
{2,
{"Справочники",1,0,"",""},
{0,
{"Обход элементов",0,0,"","Выборка = Справочники.<?"""", Справочник>.Выбрать(); 
Пока Выборка.Следующий() Цикл
	<?>
КонецЦикла; //выборка по <?"""", Справочник>"}
},
{0,
{"Обход элементов иерархически",0,0,"","Выборка = Справочники.<?"""", Справочник>.ВыбратьИерархически();  
Пока Выборка.Следующий() Цикл
	<?>
КонецЦикла; //иерарх по <?"""", Справочник>"}
}
},
{2,
{"Документы",1,0,"",""},
{0,
{"Обход документов",0,0,"","Выборка = Документы.<?"""", Документ>.Выбрать();   
Пока Выборка.Следующий() Цикл
	<?>
КонецЦикла; //выборка по <?"""", Документ>"}
},
{0,
{"Движения",0,0,"","Движения.<?""Выбор регистра"", ОбъектМетаданных, ""РегистрСведений"", ""РегистрНакопления"", ""РегистрБухгалтерии"", ""РегистрРасчета"">"}
}
},
{1,
{"Отчеты",1,0,"",""},
{0,
{"Открыть отчет",0,0,"","Отчеты.<?"""", Отчет>.ПолучитьФорму().Открыть();"}
}
},
{1,
{"Обработки",1,0,"",""},
{0,
{"Открыть обработку",0,0,"","Обработки.<?"""", Обработка>.ПолучитьФорму().Открыть();"}
}
},
{1,
{"Планы видов характеристик",1,0,"",""},
{0,
{"Обход видов характеристик",0,0,"","Выборка = ПланыВидовХарактеристик.<?"""", ПланВидовХарактеристик>.Выбрать();

Пока Выборка.Следующий() Цикл

	<?>

КонецЦикла;"}
}
},
{1,
{"Планы счетов",1,0,"",""},
{0,
{"Найти по коду",0,0,"","ПланыСчетов.<?"""", ПланСчетов>.НайтиПоКоду(<?>)"}
}
},
{1,
{"Планы видов расчета",1,0,"",""},
{0,
{"Обход видов расчета",0,0,"","Выборка = ПланыВидовРасчета.<?"""", ПланВидовРасчета>.Выбрать(); 
Пока Выборка.Следующий() Цикл
	<?>
КонецЦикла;"}
}
},
{1,
{"Бизнес-процессы",1,0,"",""},
{0,
{"Обход бизнес-процессов",0,0,"","Выборка = БизнесПроцессы.<?"""", БизнесПроцесс>.Выбрать();

Пока Выборка.Следующий() Цикл

	<?>

КонецЦикла;"}
}
},
{1,
{"Задачи",1,0,"",""},
{0,
{"Обход задач",0,0,"","Выборка = Задачи.<?"""", Задача>.Выбрать();

Пока Выборка.Следующий() Цикл

	<?>

КонецЦикла;"}
}
}
},
{11,
{"Прочие",1,0,"",""},
{0,
{"Сообщить",0,0,"Сообщ[ить]","Сообщить(<?>);"}
},
{0,
{"Предупреждение",0,0,"Предупр[еждение]","Предупреждение(<?>);"}
},
{0,
{"Формат",0,0,"Формат","Формат(<?>, ""<?, ФорматнаяСтрока>"")"}
},
{0,
{"Форматная строка",0,0,"","""<?, ФорматнаяСтрока>"""}
},
{0,
{"Запрос",0,0,"","Запрос = Новый Запрос;
Запрос.Текст = ""<?"""", ТекстЗапроса>"";

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();

Пока Выборка.Следующий() Цикл

	

КонецЦикла; //запрос
"}
},
{0,
{"Запрос с параметром",0,0,"","Запрос = Новый Запрос;
Запрос.Текст = ""<?"""", ТекстЗапроса>"";

Запрос.УстановитьПараметр(""<?>"", );

Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();

Пока Выборка.Следующий() Цикл

	

КонецЦикла;   //запрос
"}
},
{0,
{"Построитель отчета",0,0,"","Построитель = Новый ПостроительОтчета;
Построитель.Текст = ""<?""Текст запроса"", ТекстЗапроса>"";

Построитель.ЗаполнитьНастройки();

Построитель.МакетОформления = ПолучитьМакетОформления(СтандартноеОформление.Классика);

Построитель.Выполнить();
Построитель.Вывести();
"}
},
{0,
{"Вопрос",0,0,"Вопр[ос]","Вопрос(""<?""Текст вопроса"">"", <?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">)"}
},
{0,
{"Вопрос с анализом результата",0,0,"Вопр[ос]","Вопрос(""<?""Текст вопроса"">"", <?""Режим диалога вопрос"", ВыборВарианта, ""ДаНет"", ""РежимДиалогаВопрос.ДаНет"", ""ДаНетОтмена"", ""РежимДиалогаВопрос.ДаНетОтмена"", ""ОК"", ""РежимДиалогаВопрос.ОК"", ""ОКОтмена"", ""РежимДиалогаВопрос.ОКОтмена"", ""ПовторитьОтмена"", ""РежимДиалогаВопрос.ПовторитьОтмена"", ""ПрерватьПовторитьПропустить"", ""РежимДиалогаВопрос.ПрерватьПовторитьПропустить"">) = <?""Код возврата диалога"", ВыборВарианта, ""Да"", ""КодВозвратаДиалога.Да"", ""Нет"", ""КодВозвратаДиалога.Нет"", ""ОК"", ""КодВозвратаДиалога.ОК"", ""Отмена"", ""КодВозвратаДиалога.Отмена"", ""Повторить"", ""КодВозвратаДиалога.Повторить"", ""Прервать"", ""КодВозвратаДиалога.Прервать"", ""Пропустить"", ""КодВозвратаДиалога.Пропустить"", ""Тайаут"", ""КодВозвратаДиалога.Таймаут"">"}
},
{0,
{"Проверка типа",0,0,"","Если ТипЗнч(<?""Выражение для проверки типа"">) = Тип(""<?""Выберите тип"", ВыборТипа>"") Тогда 
	<?>
КонецЕсли; //ТипЗнч(<?""Выражение для проверки типа"">) = Тип(""<?""Выберите тип"", ВыборТипа>"")"}
},
{0,
{"КонструкторОписанияТипов",0,0,"","<?""Конструктор описания типов"", КонструкторОписанияТипов>"}
}
},
{13,
{"SZA",1,0,"",""},
{0,
{"тес		ТекущаяСтрока",0,0,"тес","ТС=ЭтаФорма.ЭлементыФормы<?>.ТекущаяСтрока;
//Если ЗначениеЗаполнено(ТС. ) Тогда
	//ТС. = ;
//КонецЕсли;"}
},
{0,
{"из		Врезка ""Изменено""",0,1,"из","//- <?"""", ИмяПользователя>( <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">
<?>
//.)<?"""", ИмяПользователя>"}
},
{15,
{"Сокращения для встроенных функций и процедур",1,0,"",""},
{0,
{"НМ		НачалоМесяца",0,0,"НМ","НачалоМесяца(<?>)"}
},
{0,
{"КМ		КонецМесяца",0,0,"КМ","КонецМесяца(<?>)"}
},
{0,
{"НД		НачалоДня",0,0,"НД","НачалоДня(<?>)"}
},
{0,
{"КД		КонецДня",0,0,"КД","КонецДня(<?>)"}
},
{0,
{"ТД		ТекущаяДата",0,0,"ТД","ТекущаяДата()"}
},
{0,
{"ПДН		ПериодДействияНачало",0,0,"ПДН","ПериодДействияНачало<?>"}
},
{0,
{"ПДК		ПериодДействияКонец",0,0,"ПДК","ПериодДействияКонец<?>"}
},
{0,
{"БПН		БазовыйПериодНачало",0,0,"БПН","БазовыйПериодНачало<?>"}
},
{0,
{"БПК		БазовыйПериодКонец",0,0,"БПК","БазовыйПериодКонец<?>"}
},
{0,
{"цуицвета		WebЦвета",0,0,"цуицвета","WebЦвета<?>"}
},
{0,
{"ст		Состояние",0,0,"ст","Состояние(""<?""Текст строки состояния?"">"");
<?>"}
},
{0,
{"с(		Сокрлп()",0,0,"с(","СокрЛП(<?>)"}
},
{0,
{"фо		Формат",0,0,"фо","Формат(<?>, ""<?, ФорматнаяСтрока>"")"}
},
{0,
{"чп			ЧислоПрописью",0,0,"чп","ЧислоПрописью(<?>,,""рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2"")<?>"}
},
{0,
{"со      Сообщить()",0,0,"со","Сообщить(""<?""Текст сообщения?"">"",СтатусСообщения.Информация);
<?>"}
}
},
{4,
{"Формы (все для объектов форм)",1,0,"",""},
{0,
{"вс		Выделенные Строки в цикле",0,0,"вс","ВыделенныеСтроки=ЭтаФорма.ЭлементыФормы<?>.ВыделенныеСтроки;
Для Каждого ТекСтрока Из ВыделенныеСтроки Цикл
	//ТекСтрока. = ;
КонецЦикла; //по выделенным строкам"}
},
{0,
{"ОС		Оформление Строк в цикле",0,0,"ОС","Для Каждого ОформлениеСтроки ИЗ ОформленияСтрок Цикл
	ЯчейкаСтроки=ОформлениеСтроки.ячейки; 			//ЯЧЕЙКИ
	ДанныеСтроки=ОформлениеСтроки.данныестроки; 	//ДАННЫЕ СТРОКИ
	<?>//=ДанныеСтроки.;
	//ЯчейкаСтроки..ТолькоПросмотр=Истина;
	//ЯчейкаСтроки..ЦветФона		=ТутВыбранЦвет;
КонецЦикла;  //по оформлению строк
"}
},
{0,
{"эт		ЭтаФорма.ЭлементыФормы",0,0,"эт","ЭтаФорма.ЭлементыФормы<?> ;"}
},
{0,
{"тс		ТекущаяСтрока",0,0,"тс","ТекСтрока=ЭтаФорма.ЭлементыФормы<?>.ТекущаяСтрока;
//Если ЗначениеЗаполнено(ТекСтрока. ) Тогда
	//ТекСтрока. = ;
//КонецЕсли;"}
}
},
{4,
{"Запросы (для вызова из тела запросов)",1,0,"",""},
{0,
{"ВЫБ		ВЫБОР",0,0,"ВЫБ","ВЫБОР КОГДА <?>
	ТОГДА
	ИНАЧЕ
КОНЕЦ"}
},
{0,
{"ВЫР		ВЫРАЗИТЬ КАК СТРОКА",0,0,"ВЫР","ВЫРАЗИТЬ ( <?> КАК СТРОКА (1000))"}
},
{0,
{"ЛвС		ЛЕВОЕ СОЕДИНЕНИЕ",0,0,"ЛвС","ЛЕВОЕ СОЕДИНЕНИЕ"}
},
{0,
{"ПрС		ПРАВОЕ СОЕДИНЕНИЕ",0,0,"ПрС","ПРАВОЕ СОЕДИНЕНИЕ"}
}
},
{9,
{"СпецСимволы и препроцессор",1,0,"",""},
{0,
{"№		#Если",0,0,"№","#Если <?"""", ВыборВарианта, ""Клиент"", ""Клиент"", ""Сервер"", ""Сервер"", ""ВнешнееСоединение"", ""ВнешнееСоединение""> Тогда
    <?> 	
#КонецЕсли"}
},
{0,
{"#		#Если",0,0,"#","#Если <?"""", ВыборВарианта, ""Клиент"", ""Клиент"", ""Сервер"", ""Сервер"", ""ВнешнееСоединение"", ""ВнешнееСоединение""> Тогда
    <?> 	
#КонецЕсли"}
},
{0,
{"7		&",0,0,"7","&<?>"}
},
{0,
{"9		();",0,0,"9","(<?>);"}
},
{0,
{"х		[] квадратные скобки",0,0,"х","[]<?>"}
},
{0,
{"ю		знак "">""",0,0,"ю","><?>"}
},
{0,
{"б		знак ""<""",0,0,"б","<<?>"}
},
{0,
{"бю    <>",0,0,"бю","<>"}
},
{0,
{""" т""   +Символы.Таб+",0,0," т","+Символы.Таб+"}
}
},
{7,
{"УсловияСравнения (собственно сами условия)",1,0,"",""},
{0,
{"з		ЗначениеЗаполнено()",0,0,"з","ЗначениеЗаполнено(<?>)"}
},
{0,
{"нз		НЕ ЗначениеЗаполнено()",0,0,"нз","НЕ ЗначениеЗаполнено(<?>)"}
},
{0,
{"=пд		Пустая Дата",0,0,"=пд","='00010101000000' <?>"}
},
{0,
{"=н		=Непределено",0,0,"=н","=Неопределено <?>"}
},
{0,
{"тз		ТипЗначения=",0,0,"тз","Если ТипЗнч(<?""Выражение для проверки типа"">) = Тип(""<?""Выберите тип"", ВыборТипа>"") Тогда
	<?>
КонецЕсли; //ТипЗнч(<?""Выражение для проверки типа"">) = Тип(""<?""Выберите тип"", ВыборТипа>"")"}
},
{0,
{"тзд		ТипЗначения Документ=",0,0,"тзд","ТипЗнч(<?>)=Тип(""ДокументСсылка.<?""Документ сравнения?"", Документ>"")"}
},
{0,
{"тзс		ТипЗначения Справочник=",0,0,"тзс","ТипЗнч(<?>)=Тип(""СправочникСсылка.<?""Справочник сравнения?"", Справочник>"")"}
}
},
{16,
{"Условия (структуры условий)",1,0,"",""},
{5,
{"Справочники определенные",1,0,"",""},
{0,
{"ко		Контрагент",0,0,"ко","Контрагент<?>"}
},
{0,
{"ор		Организация",0,0,"ор","Организация<?>"}
},
{0,
{"под		Подразделение",0,0,"под"," Подразделение<?>"}
},
{0,
{"ст		СтатьиДвиженияДенежныхСредств",0,0,"ст","СтатьиДвиженияДенежныхСредств<?>"}
},
{0,
{"фи		ФизическиеЛица",0,0,"фи","ФизическиеЛица<?>"}
}
},
{0,
{"е		ЕслиТогдаКонецЕсли",0,0,"е","Если <?> Тогда
	
КонецЕсли;"}
},
{0,
{"ен		ЕслиНе",0,0,"ен","Если НЕ <?> Тогда
	
КонецЕсли;"}
},
{0,
{"еи		ЕслиИначе",0,1,"еи","Если <?> Тогда
	
Иначе 	
КонецЕсли;"}
},
{0,
{"ени		ЕслиНеИначе",0,0,"ени","Если НЕ <?> Тогда

Иначе  
КонецЕсли;"}
},
{0,
{"ине		ИначеЕсли",0,0,"ине","ИначеЕсли 	<?>;"}
},
{0,
{"ин		Иначе",0,0,"ин","Иначе 	<?>;"}
},
{0,
{"ке		Конецесли;",0,0,"ке","	<?>
КонецЕсли;"}
},
{0,
{"то		ТогдаКонецЕсли",0,0,"то","Тогда <?> ;
КонецЕсли;"}
},
{0,
{"е1		ЕслиТогда в одну строку",0,0,"е1","Если <?> Тогда"}
},
{0,
{"ен1		ЕслиНе в одну строку",0,0,"ен1","Если НЕ <?> Тогда"}
},
{0,
{"#    #Если Клиент Тогда КонецЕсли",0,0,"#","#Если Клиент Тогда
	<?>
#КонецЕсли"}
},
{0,
{"#е    #Если Клиент Тогда",0,0,"#е","#Если Клиент Тогда
	<?>"}
},
{0,
{"#t    #Если Клиент Тогда",0,0,"#t","#Если Клиент Тогда
	<?>"}
},
{0,
{"#к    #КонецЕсли",0,0,"#к","#КонецЕсли"}
},
{0,
{"#r    #КонецЕсли",0,0,"#r","#КонецЕсли"}
}
},
{20,
{"Алгоритмы",1,0,"",""},
{5,
{"Диалоги",1,0,"",""},
{0,
{"пр		Предупреждение",0,0,"пр","Предупреждение(""<?""Текст предупреждения?"">."",<?>0,""<?""Заголовок окна предупреждения?"">!"");"}
},
{0,
{"ДВК		Диалог Выбора Каталога",0,0,"ДВК","ДиалогФыбораФайла1 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
ДиалогФыбораФайла1.Заголовок				= ""<?>Выберите каталог для импорта:"";
ДиалогФыбораФайла1.МножественныйВыбор		= Ложь;
ДиалогФыбораФайла1.ПредварительныйПросмотр	= Ложь;
ДиалогФыбораФайла1.ИндексФильтра			= 0;
ДиалогФыбораФайла1.Каталог					= <?""Переменная файлового каталога?"">;
Если ДиалогФыбораФайла1.Выбрать() Тогда 
	<?""Переменная файлового каталога?"">= ДиалогФыбораФайла1.Каталог;<?>
КонецЕсли;  //когда каталог <?""Переменная файлового каталога?""> выбран
"}
},
{0,
{"ДВФ		Диалог Выбора Файла",0,0,"ДВФ","ДиалогФильтр		= ""Файл текста (*.*)|*.*"";
ДиалогРасширение	= ""*"";
ДиалогФыбораФайла1 	= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
ДиалогФыбораФайла1.Заголовок				=	""<?>Выберите файл для импорта:"";
ДиалогФыбораФайла1.ПолноеИмяФайла			=	<?""Переменная Адреса?"">; //АДРЕС
ДиалогФыбораФайла1.Фильтр					=	ДиалогФильтр;
ДиалогФыбораФайла1.Расширение				=	ДиалогРасширение;
ДиалогФыбораФайла1.МножественныйВыбор		=	Ложь;
ДиалогФыбораФайла1.ПредварительныйПросмотр	=	Ложь;
ДиалогФыбораФайла1.ИндексФильтра			=	0;
ДиалогФыбораФайла1.ПроверятьСуществованиеФайла	=	Истина;
Если ДиалогФыбораФайла1.Выбрать() Тогда
	<?""Переменная Адреса?"">= ДиалогФыбораФайла1.ПолноеИмяФайла;<?>
КонецЕсли; //когда файл <?""Переменная Адреса?""> выбран
"}
},
{0,
{"ФВД		Форма Выбора Документа",0,0,"ФВД","//СтандартнаяОбработка=Ложь;
<?""Имя документа формы выбора?"", Документ>ФормаВыбора=Документы.<?""Имя документа формы выбора?"", Документ>.ПолучитьФормуВыбора(,<?>);
 //Если ЗначениеЗаполнено(  ) Тогда //ПОЛЕ УСЛОВИЯ
 //	<?""Имя документа формы выбора?"", Документ>ФормаВыбора.документСписок.Отбор..Использование 	= Истина;  //КОЛОНКА УСЛОВИЯ
 //	<?""Имя документа формы выбора?"", Документ>ФормаВыбора.документСписок.Отбор..ВидСравнения 	= ВидСравнения.Равно; 
 //	<?""Имя документа формы выбора?"", Документ>ФормаВыбора.документСписок.Отбор..Значение				=  ; //ЗНАЧЕНИЕ УСЛОВИЯ
 //КонецЕсли;
Если ЗначениеЗаполнено(<?""Переменная, ссылка документа?"">) Тогда
	<?""Имя документа формы выбора?"", Документ>ФормаВыбора.НачальноеЗначениеВыбора=<?""Переменная, ссылка документа?"">;
КонецЕсли;
<?""Имя документа формы выбора?"", Документ>ПолученоЗначение=<?""Имя документа формы выбора?"", Документ>ФормаВыбора.ОткрытьМодально();
Если ЗначениеЗаполнено(<?""Имя документа формы выбора?"", Документ>ПолученоЗначение) Тогда
	 <?""Переменная, ссылка документа?"">=<?""Имя документа формы выбора?"", Документ>ПолученоЗначение;
КонецЕсли;  //документ выбран
"}
},
{0,
{"ФВС		Форма Выбора Справочника",0,0,"ФВС"," //СтандартнаяОбработка=Ложь;
<?""Укажите имя справочника для формы выбора:"", Справочник>ФормаВыбора=справочники.<?""Укажите имя справочника для формы выбора:"", Справочник>.ПолучитьФормуВыбора(,<?>); //Владельца
 //Если ЗначениеЗаполнено(  ) Тогда //ПОЛЕ УСЛОВИЯ
 //	<?""Укажите имя справочника для формы выбора:"", Справочник>ФормаВыбора.СправочникСписок.Отбор..Использование	= Истина;  //КОЛОНКА УСЛОВИЯ
 //	<?""Укажите имя справочника для формы выбора:"", Справочник>ФормаВыбора.СправочникСписок.Отбор..ВидСравнения 	= ВидСравнения.Равно; 
 //	<?""Укажите имя справочника для формы выбора:"", Справочник>ФормаВыбора.СправочникСписок.Отбор..Значение		=  ; //ЗНАЧЕНИЕ УСЛОВИЯ
 //КонецЕсли;
Если ЗначениеЗаполнено(<?""Переменная ссылка справочника?"">) Тогда
	<?""Укажите имя справочника для формы выбора:"", Справочник>ФормаВыбора.НачальноеЗначениеВыбора=<?""Переменная ссылка справочника?"">;
КонецЕсли;
<?""Укажите имя справочника для формы выбора:"", Справочник>ПолученоЗначение=<?""Укажите имя справочника для формы выбора:"", Справочник>ФормаВыбора.ОткрытьМодально();
Если ЗначениеЗаполнено(<?""Укажите имя справочника для формы выбора:"", Справочник>ПолученоЗначение) Тогда
	<?""Переменная ссылка справочника?"">=<?""Укажите имя справочника для формы выбора:"", Справочник>ПолученоЗначение;
КонецЕсли;  //элемент выбран
"}
}
},
{0,
{"вы		Выборка с циклом",0,0,"вы","Выборка = <?>.Выбрать();
Пока Выборка.Следующий() Цикл

//ОбработкаПрерыванияПользователя();
КонецЦикла;  //выборка"}
},
{0,
{"зап		Запрос с Анализом",0,0,"зап","Зап<?""Укажите название запроса?"">=Новый Запрос;
Зап<?""Укажите название запроса?"">.Текст=""<?"""", ТекстЗапроса> "";
 //Если  Тогда
 // Зап<?""Укажите название запроса?"">.Текст=Зап<?""Укажите название запроса?"">.Текст+"" И  "";
 <?>//	Зап<?""Укажите название запроса?"">.УстановитьПараметр(""<?""Укажите имя параметра?"">"",<?""Укажите имя параметра?"">);
 //КонецЕсли;
Вз<?""Укажите название запроса?"">=Зап<?""Укажите название запроса?"">.Выполнить();
Если Не Вз<?""Укажите название запроса?"">.Пустой() Тогда
	Рез<?""Укажите название запроса?"">=Вз<?""Укажите название запроса?"">.Выбрать();
	Сч<?""Укажите название запроса?"">=0;
	Пока Рез<?""Укажите название запроса?"">.Следующий() Цикл
		Рез<?""Укажите имя Результата?"">=Рез<?""Укажите название запроса?"">.<?""Укажите имя Результата?"">;
		Сч<?""Укажите название запроса?"">=Сч<?""Укажите название запроса?"">+1;
		//ОбработкаПрерыванияПользователя();
	КонецЦикла;	//по результатам запроса <?""Укажите название запроса?"">
	// сообщить(""Всего: ""+Сч<?""Укажите название запроса?"">);
Иначе 	//запрос пуст!
КонецЕсли; 
"}
},
{0,
{"зап1		Запрос с анализом для одной записи",0,0,"зап1","Зап<?""Укажите название запроса?"">=Новый Запрос;
Зап<?""Укажите название запроса?"">.Текст=""<?"""", ТекстЗапроса> "";  //ВЫБРАТЬ ПЕРВЫЕ 1
 <?>//	Зап<?""Укажите название запроса?"">.УстановитьПараметр(""<?""Укажите имя параметра?"">"",<?""Укажите имя параметра?"">);
Вз<?""Укажите название запроса?"">=Зап<?""Укажите название запроса?"">.Выполнить();
Если Не Вз<?""Укажите название запроса?"">.Пустой() Тогда
	Рез<?""Укажите название запроса?"">=Вз<?""Укажите название запроса?"">.Выбрать();
	Рез<?""Укажите название запроса?"">.Следующий();
	Рез<?""Укажите имя Результата?"">=Рез<?""Укажите название запроса?"">.<?""Укажите имя Результата?"">;
	
Иначе 	//запрос пуст!
КонецЕсли;
"}
},
{0,
{"сол		СтандартнаяОбработка=ложь;",0,0,"сол","СтандартнаяОбработка=Ложь;
<?>"}
},
{0,
{"по		Попытка Исключение КонецПопытки",0,0,"по","Попытка <?>
Исключение 	//Сообщить(""Произошла ошибка: ""+ОписаниеОшибки());
			//Предупреждение(""Произошла ошибка: ""+ОписаниеОшибки(),0,""ВНИМАНИЕ!"");
КонецПопытки;"}
},
{0,
{"икп		Исключение - КонецПопытки",0,0,"икп","Исключение <?>
КонецПопытки;"}
},
{0,
{"права -Права",0,0,"права","НЕ ПолучитьСписокНабораПрав().НайтиПоЗначению(Перечисления.НаборПравПользователей.ПолныеПрава) = Неопределено"}
},
{0,
{"здбф		Запись ДБФ",0,0,"здбф","БазаДБФ<?""Имя базы ДБФ?"">=новый XBase;
БазаДБФ<?""Имя базы ДБФ?"">.поля.Добавить(""<?>FIELDNAM"",""N"",6,3); //S, ""D"",8,0
БазаДБФ<?""Имя базы ДБФ?"">.Кодировка=КодировкаXBase.OEM;
БазаДБФ<?""Имя базы ДБФ?"">.СоздатьФайл(внешнийФайл);
Пока  Цикл //УСЛОВИЕ ЗАПИСИ
	БазаДБФ<?""Имя базы ДБФ?"">.Добавить();
	//БазаДБФ<?""Имя базы ДБФ?"">.FIELDNAM = ;
	БазаДБФ<?""Имя базы ДБФ?"">.Записать();
	//ОбработкаПрерыванияПользователя();
конеццикла;  //записи <?""Имя базы ДБФ?"">
БазаДБФ<?""Имя базы ДБФ?"">.ЗакрытьФайл();
"}
},
{0,
{"чдбф		Чтение ДБФ",0,0,"чдбф","БазаДБФ<?""Имя базы ДБФ?"">=новый XBase;
БазаДБФ<?""Имя базы ДБФ?"">.ОткрытьФайл(<?>ФайлБазыДанных);
КоличествоЗаписейДБФ<?""Имя базы ДБФ?"">=БазаДБФ<?""Имя базы ДБФ?"">.КоличествоЗаписей();
Если БазаДБФ<?""Имя базы ДБФ?"">.Первая() Тогда
		Пока Истина Цикл
				// = БазаДБФ.FIELDNAM ;
				
				Если НЕ БазаДБФ<?""Имя базы ДБФ?"">.Следующая() Тогда Прервать;
				Конецесли;
				//ОбработкаПрерыванияПользователя();
		КонецЦикла; //обхода ДБФ <?""Имя базы ДБФ?"">
		//Сообщить(""Итого : ""+КоличествоЗаписейДБФ<?""Имя базы ДБФ?"">);
Иначе //База пустая
Конецесли;
БазаДБФ<?""Имя базы ДБФ?"">.ЗакрытьФайл();
"}
},
{0,
{"дз		Запись Документа",0,0,"дз","Попытка <?""Имя объекта документа?"">.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
Исключение <?>//<?""Имя объекта документа?"">.Записать(РежимЗаписиДокумента.Запись);
	//Сообщить(""Ошибка при попытке записи документа: ""+<?""Имя объекта документа?"">+"" ""+ОписаниеОшибки());
	//Предупреждение(""Ошибка при попытке записи документа: ""+<?""Имя объекта документа?"">+"" ""+ОписаниеОшибки(),0,""Ошибка при попытке записи документа!"");
КонецПопытки;  //записи  <?""Имя объекта документа?"">"}
},
{0,
{"сз      Запись Справочника",0,0,"сз","Попытка <?""Имя объекта справочника?"">.Записать();
Исключение 	//Сообщить(""Ошибка при попытке записи эл-та справочника: ""+<?""Имя объекта справочника?"">+"" ""+ОписаниеОшибки());
			//Предупреждение(""Ошибка при попытке записи эл-та справочника: ""+<?""Имя объекта справочника?"">+"" ""+ОписаниеОшибки(),0,""Ошибка при попытке записи в справочник!"");
КонецПопытки;  //записи  <?""Имя объекта справочника?"">"}
},
{0,
{"МАК		Макет печати развернутый",0,0,"МАК","<?""Имя макета?"">ТабДок = Новый ТабличныйДокумент;
<?""Имя макета?"">Макет = ПолучитьМакет(""<?""Имя макета?"">""); //Название макета
<?""Имя макета?"">Область = <?""Имя макета?"">Макет.ПолучитьОбласть(""Ш""); //ШАПКА
 //<?""Имя макета?"">Область.Параметры. ; //ИМЯ ПАРАМЕТРА!
<?""Имя макета?"">ТабДок.Вывести(<?""Имя макета?"">Область);
<?""Имя макета?"">СчетчикСтрок=0;
пока <?> цикл //Условие вывода строк
	<?""Имя макета?"">СчетчикСтрок=<?""Имя макета?"">СчетчикСтрок+1;
	<?""Имя макета?"">Область = <?""Имя макета?"">Макет.ПолучитьОбласть(""С""); //СТРОКА
	<?""Имя макета?"">Область.Параметры. ; //ИМЯ ПАРАМЕТРА!
	 //<?""Имя макета?"">Область.Параметры. ; //ИМЯ ПАРАМЕТРА!
	<?""Имя макета?"">ТабДок.Вывести(<?""Имя макета?"">Область);
	//ОбработкаПрерыванияПользователя();
КонецЦикла; //вывод строк <?""Имя макета?"">
 //<?""Имя макета?"">Область = <?""Имя макета?"">Макет.ПолучитьОбласть(""П""); //ПОДВАЛ
 //<?""Имя макета?"">Область.Параметры. ; //ИМЯ ПАРАМЕТРА!
 //<?""Имя макета?"">ТабДок.Вывести(<?""Имя макета?"">Область);
<?""Имя макета?"">ТабДок.ОтображатьСетку = Истина;
<?""Имя макета?"">ТабДок.Защита = ИСТИНА;
<?""Имя макета?"">ТабДок.ТолькоПросмотр = Ложь;
<?""Имя макета?"">ТабДок.ОтображатьЗаголовки = Истина;
<?""Имя макета?"">ТабДок.ОтображатьГруппировки = Истина;
<?""Имя макета?"">ТабДок.Показать();
"}
},
{0,
{"рсмз		РегистрСведенийМенеджерЗаписи",0,0,"рсмз","<?""Имя Менеджера Записи регистра сведений?"">=РегистрыСведений.<?"""", РегистрСведений>.СоздатьМенеджерЗаписи();
<?""Имя Менеджера Записи регистра сведений?"">.Активность=Истина;
<?""Имя Менеджера Записи регистра сведений?""><?>  ;
//<?""Имя Менеджера Записи регистра сведений?"">   ;
<?""Имя Менеджера Записи регистра сведений?"">.Записать(Истина);
"}
},
{0,
{"тиз		ТипЗначения",0,0,"тиз","ТипЗнч(<?>)"}
},
{0,
{"дви		Движение",0,0,"дви","Движение = Движения<?>"}
},
{0,
{"УП		Установить параметр",0,0,"УП","УстановитьПараметр(""<?>"",);"}
},
{0,
{"доз   увеличение условия запроса",0,0,"доз","Если ЗначениеЗаполнено(<?""Имя хозяина условия?"">.<?""Имя параметра условия?"">) Тогда
		<?""Имя запроса?"">.Текст=<?""Имя запроса?"">.Текст+"" И <?> .<?""Имя параметра условия?""> = &<?""Имя параметра условия?"">  "";
		<?""Имя запроса?"">.УстановитьПараметр(""<?""Имя параметра условия?"">"",<?""Имя хозяина условия?"">.<?""Имя параметра условия?"">);
КонецЕсли;  //ЗначениеЗаполнено(<?""Имя хозяина условия?"">.<?""Имя параметра условия?"">)
"}
},
{0,
{"выс  Перебрать элементы справочника в цикле",0,0,"выс","<?""Название переменной выборки?"">=Справочники.<?"""", Справочник>.Выбрать(,) ;
Пока <?""Название переменной выборки?"">.Следующий() Цикл
	<?>//Если <?""Название переменной выборки?"">. =  Тогда
	//
	//КонецЕсли;
//ОбработкаПрерыванияПользователя();
КонецЦикла; //выборка <?""Название переменной выборки?"">"}
},
{0,
{"выд  Перебрать документы в цикле",0,0,"выд","<?""Название переменной выборки?"">=Документы.<?"""", Документ>.Выбрать(,) ;
Пока <?""Название переменной выборки?"">.Следующий() Цикл
	<?>//Если <?""Название переменной выборки?"">. =  Тогда
	//
	//КонецЕсли;
//ОбработкаПрерыванияПользователя();
КонецЦикла; //выборка <?""Название переменной выборки?"">"}
}
},
{6,
{"Структура Модуля",1,0,"",""},
{0,
{"ф		Функция",0,0,"ф","Функция <?""Имя функции?"">(<?>) //Экспорт
	//Результат<?""Имя функции?"">= ;
	Возврат Результат<?""Имя функции?"">;
КонецФункции //<?""Имя функции?"">"}
},
{0,
{"кф		КонецФункции",0,0,"кф","	<?>
КонецФункции"}
},
{0,
{"про		Процедура",0,0,"про","Процедура <?""Имя Процедуры"">(<?>) //Экспорт	
	
КонецПроцедуры //<?""Имя Процедуры"">"}
},
{0,
{"кп		КонецПроцедуры",0,0,"кп","	<?>
КонецПроцедуры"}
},
{0,
{"изм		Врезка ""Изменено""",0,1,"изм","//ИЗМЕНЕНО <?"""", ИмяПользователя>(Начало <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">
<?>
//Окончание)<?"""", ИмяПользователя>"}
},
{0,
{"/.		отчерк_с комментарием",0,0,"/.","//____<?""Введите текст комментария:"">___________________________________________
<?>"}
}
},
{5,
{"Объекты окружения (массивы, табличныедокументы и прочее)",1,0,"",""},
{0,
{"м		Массив",0,0,"м","Массив = Новый Массив(<?>);"}
},
{0,
{"поб		ПолучитьОбласть",0,0,"поб","<?""Название области""> = <?>.ПолучитьОбласть(""<?""Название области"">"");"}
},
{0,
{"стру		Структура",0,0,"струк","<?""Имя структуры?"">Структура=Новый Структура(""<?>""); //ПЕРЕЧИСЛЕНИЕ ПОЛЕЙ
//<?""Имя структуры?"">Структура.Вставить("""", ); //ПЕРЕДАТЬ
//<?""Имя структуры?"">Структура.Свойство("""", ); //ПОЛУЧИТЬ
"}
},
{0,
{"тд		ТабДок",0,0,"тд","ТабДок = <?"""", ВыборВарианта, ""ЭлементыФормы.ТабДок"", ""ЭлементыФормы.ТабДок"", ""Новый ТабличныйДокумент"", ""Новый ТабличныйДокумент"">;
<?>"}
},
{0,
{"=нт  =Новый таблицаЗначений;",0,0,"=нт","=Новый ТаблицаЗначений;"}
}
},
{18,
{"Объекты метаданных (справочник, документ и т.п.)",1,0,"",""},
{0,
{"д		Документы (с выбором)",0,0,"д","Документы.<?"""", Документ><?>"}
},
{0,
{"до     Документы",0,0,"до","Документы<?>"}
},
{0,
{"к		Константы (с выбором)",0,0,"к","Константы.<?"""", Константа><?> ;"}
},
{0,
{"кн		Компоновщик Настроек",0,0,"кн","ЭтотОбъект.КомпоновщикНастроек.Настройки<?>"}
},
{0,
{"о		Обработки (с выбором)",0,0,"о","Обработки.<?"""", Обработка><?> ;"}
},
{0,
{"от		Отчеты (с выбором)",0,0,"от","Отчеты.<?"""", Отчет><?> ;"}
},
{0,
{"п		Перечисления (с выбором)",0,0,"п","Перечисления.<?"""", Перечисление><?> ;"}
},
{0,
{"пе		Перечисления",0,0,"пе","Перечисления<?> ;"}
},
{0,
{"рб		Регистр Бухгалтерии",0,0,"рб","РегистрБухгалтерии.<?"""", ОбъектМетаданных, ""РегистрБухгалтерии"", ""РегистрБухгалтерии.Измерение"", ""РегистрБухгалтерии.Ресурс"", ""РегистрБухгалтерии.Реквизит"">"}
},
{0,
{"рн		Регистры Накоплений (с выбором)",0,0,"рн","РегистрНакопления.<?"""", ОбъектМетаданных, ""РегистрНакопления"", ""РегистрНакопления.Ресурс"", ""РегистрНакопления.Реквизит"", ""РегистрНакопления.Измерение"">"}
},
{0,
{"рр		Регистр Расчета",0,0,"рр","РегистрРасчета.<?"""", ОбъектМетаданных, ""РегистрРасчета"", ""РегистрРасчета.Ресурс"", ""РегистрРасчета.Реквизит"", ""РегистрРасчета.Измерение"", ""РегистрРасчета.Перерасчет"", ""РегистрРасчета.Перерасчет.Измерение"">"}
},
{0,
{"рс		Регистры Сведений (с выбором)",0,0,"рс","РегистрСведений.<?"""", ОбъектМетаданных, ""РегистрСведений"", ""РегистрСведений.Реквизит"", ""РегистрСведений.Измерение"">;"}
},
{0,
{"с		Справочники (с выбором)",0,0,"с","Справочники.<?"""", Справочник><?> ;"}
},
{0,
{"сп		Справочники",0,0,"сп","Справочники<?> ;"}
},
{0,
{"спр		Справочник",0,0,"спр","Справочник.<?"""", ОбъектМетаданных, ""Справочник"", ""Справочник.Реквизит"", ""Справочник.ТабличнаяЧасть"", ""Справочник.ТабличнаяЧасть.Реквизит"">"}
},
{0,
{"скд		Схема Компоновки Данных",0,0,"скд","ЭтотОбъект.СхемаКомпоновкиДанных<?>"}
},
{0,
{"счдт		ВыборСчета Дт",0,0,"счдт","СчетДт = <?"""", ПланСчетовПредопределенныеДанные>;<?>      "}
},
{0,
{"счкт		ВыборСчета Кт",0,0,"счкт","СчетКт = <?"""", ПланСчетовПредопределенныеДанные>;  <?>"}
}
},
{3,
{"Личные",1,0,"",""},
{0,
{"вер   ВерсияПоставки",0,0,"вер","=szКакаяверсияПоставки();"}
},
{0,
{"пз   При закрытии запись в журнал",0,0,"пз","SZЗаписьВЖурнал(ложь,ЭтаФорма);"}
},
{0,
{"пс    Права SZФС",0,0,"пс","Объ=перечисления.SZОбъектыФС<?>;
Если Не SZПрДо(Объ,,1,SZглТекущийПользователь()) тогда
	SZПроверитьНаПодсветкуПолей(ЭтаФорма);
Иначе Отказ=Истина;
КонецЕсли;
"}
}
}
}
}
}